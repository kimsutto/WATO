[{"/Users/sujin/Desktop/wato/src/App.js":"1","/Users/sujin/Desktop/wato/src/styles/GlobalStyles.js":"2","/Users/sujin/Desktop/wato/src/styles/media.js":"3","/Users/sujin/Desktop/wato/src/styles/theme.js":"4","/Users/sujin/Desktop/wato/src/index.js":"5","/Users/sujin/Desktop/wato/src/pages/MyPage/index.js":"6","/Users/sujin/Desktop/wato/src/pages/Home/index.js":"7","/Users/sujin/Desktop/wato/src/pages/Login/index.js":"8","/Users/sujin/Desktop/wato/src/components/Header/index.js":"9","/Users/sujin/Desktop/wato/src/components/Header/style.js":"10","/Users/sujin/Desktop/wato/src/pages/SelectRole/index.js":"11","/Users/sujin/Desktop/wato/src/pages/PartyList/index.js":"12","/Users/sujin/Desktop/wato/src/pages/SelectPlatform/index.js":"13","/Users/sujin/Desktop/wato/src/pages/MakeParty/index.js":"14"},{"size":1133,"mtime":1606666495985,"results":"15","hashOfConfig":"16"},{"size":779,"mtime":1606499190218,"results":"17","hashOfConfig":"16"},{"size":299,"mtime":1606495150399,"results":"18","hashOfConfig":"16"},{"size":313,"mtime":1606495164304,"results":"19","hashOfConfig":"16"},{"size":311,"mtime":1606494664591,"results":"20","hashOfConfig":"16"},{"size":3296,"mtime":1606743466120,"results":"21","hashOfConfig":"16"},{"size":1750,"mtime":1606687065718,"results":"22","hashOfConfig":"16"},{"size":5830,"mtime":1606694804284,"results":"23","hashOfConfig":"16"},{"size":578,"mtime":1606686835931,"results":"24","hashOfConfig":"16"},{"size":567,"mtime":1606686826114,"results":"25","hashOfConfig":"16"},{"size":2596,"mtime":1606693900885,"results":"26","hashOfConfig":"16"},{"size":3905,"mtime":1606699143028,"results":"27","hashOfConfig":"16"},{"size":3678,"mtime":1606693776768,"results":"28","hashOfConfig":"16"},{"size":4005,"mtime":1606697379925,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"bvzu4r",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"41"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"41"},"/Users/sujin/Desktop/wato/src/App.js",[],["69","70"],"/Users/sujin/Desktop/wato/src/styles/GlobalStyles.js",[],"/Users/sujin/Desktop/wato/src/styles/media.js",[],"/Users/sujin/Desktop/wato/src/styles/theme.js",[],"/Users/sujin/Desktop/wato/src/index.js",[],["71","72"],"/Users/sujin/Desktop/wato/src/pages/MyPage/index.js",["73","74","75","76","77"],"/Users/sujin/Desktop/wato/src/pages/Home/index.js",["78","79"],"import {React,useEffect,useState} from 'react';\nimport styled from 'styled-components';\nimport {Route, Link} from 'react-router-dom';\nimport Header from '../../components/Header';\nimport logo from '../../images/logo.jpg';\n\nconst Container = styled.div`\n    margin-top: 50px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    font-size: 17px;\n    color: #5e5e5e;\n`;\n\nconst Button = styled.button`\n    margin-top : 50px;\n    width: 30%;\n    height: 40px;\n    color: #fff;\n    font-size: 20px;\n    font-weight: bold;\n    border-radius: 6px;\n    border: solid 1px #5e5e5e;\n    background: #5e5e5e;\n`;\n\nconst Title = styled.div`\n    width : 270px;\n    font-weight: bold;\n    margin-bottom : 50px;\n`;\n\nconst Home = () => {\n    \n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    useEffect(\n        () =>{\n            if(sessionStorage.getItem('walletInstance')){\n                setIsLoggedIn(true);\n            }\n        },[],\n    );\n    \n    return(\n        <>\n            <Header/>\n            <Container>\n                <Title><img src = {logo} /></Title>\n                <p>보고싶은 영화, 드라마, 예능!</p>\n                <p>우리 같이 싸게 볼래?</p>\n                <br/>\n                <br/>\n                <p>WATO는 ott 플랫폼의 계정을 파티원들과</p>\n                <p>공유하여 요금을 나누어 낼 수 있는</p>\n                <p>파티를 매칭해줍니다!</p>\n\n                {isLoggedIn ? (\n                    <Button><Link to ='/selectplatform'>파티찾기</Link></Button>\n                ):(\n                    <Button><Link to ='/login'>시작하기</Link></Button>\n                )}\n            </Container> \n        </>\n    );\n};\n\nexport default Home;",["80","81"],"/Users/sujin/Desktop/wato/src/pages/Login/index.js",["82","83","84"],"import React,{useState} from 'react';\nimport Caver from 'caver-js';\nimport styled from 'styled-components';\nimport Header from '../../components/Header'\nimport logo from '../../images/logo.jpg';\n\nconst Login = () => {  \n\n    const Container = styled.div`\n        margin-top: 50px;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        font-size: 15px;\n        color: #5e5e5e;\n    `;\n\n    const Button = styled.button`\n        margin-top : 30px;\n        width: 100px;\n        height: 40px;\n        color: #fff;\n        font-size: 20px;\n        font-weight: bold;\n        border-radius: 6px;\n        border: solid 1px #5e5e5e;\n        background: #5e5e5e;\n    `;\n\n    const Title = styled.div`\n        font-size: 25px;\n        width : 200px;\n        font-weight: bold;\n        margin-bottom : 50px;\n    `;\n\n    const Wrapper = styled.div`\n        background-color : #cccbcb;\n        width : 300px;\n        height : 300px;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        border-radius : 15px;\n        color : black;\n    `;\n\n    const Label = styled.label`\n        margin-top : 20px;\n        font-size : 20px;\n        color : black;\n    `;\n\n\n    const config = {\n        rpcURL : 'https://api.baobab.klaytn.net:8651'\n    }\n    const cav = new Caver(config.rpcURL);\n    \n    const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n    const [auth, setAuth] = React.useState({\n        keystore : '',\n        password : ''\n    });\n    const [account, setAccount] = React.useState({\n        address : '',\n        balance : ''\n    });\n    \n    React.useEffect(\n        () =>{\n            if(sessionStorage.getItem('walletInstance')){\n                setIsLoggedIn(true);\n                const walletFromSession = sessionStorage.getItem('walletInstance');\n                cav.klay.getBalance(JSON.parse(walletFromSession).address)\n                    .then(res =>{\n                        setAccount({\n                            ...account,\n                            balance : res\n                        })\n                    })\n                setAccount({\n                    ...account,\n                    address : JSON.parse(walletFromSession).address\n                });\n            }\n            \n        },[],\n    );\n\n    const HandleImport = e => {\n        const fileReader = new FileReader();\n        fileReader.readAsText(e.target.files[0]);\n        fileReader.onload = e => {\n            try{\n                if(!checkValidKeyStore(e.target.result)){\n                    console.log('유효하지 않은 키스토어 파일');\n                    return;\n                }\n                auth.keystore = e.target.result;\n            }catch (e){\n                console.log('유효하지 않은 키스토어 파일');;\n            }\n        }\n    };\n\n    const checkValidKeyStore = keystore => {\n        const parsedKeystore = JSON.parse(keystore);\n        const isValidKeystore = parsedKeystore.version &&\n            parsedKeystore.id &&\n            parsedKeystore.address &&\n            parsedKeystore.crypto;\n\n        return isValidKeystore;\n    }\n\n    const HandlePassword = e => {\n        auth.password = e.target.value;\n        //setAuth({\n          //  ...auth,\n            //[e.target.name] : e.target.value\n        //});\n    };\n    \n    const HandleLogin = e => {\n            try{\n                console.log(auth.keystore);\n                console.log(auth.password);\n                const privateKey = cav.klay.accounts.decrypt(auth.keystore,auth.password).privateKey;\n                integrateWallet(privateKey);\n            }catch(e){\n                console.log('비밀번호 불일치');\n            }\n    };\n\n    const integrateWallet = privateKey => {\n        //private key 사용해 walletInstance(user Info) 가져옴\n        const walletInstance = cav.klay.accounts.privateKeyToAccount(privateKey);\n        \n        //쉽게 인스턴스를 다시 불러와 트랜잭션 처리 가능 \n        cav.klay.accounts.wallet.add(walletInstance);\n        sessionStorage.setItem('walletInstance',JSON.stringify(walletInstance));\n        setAccount({\n            address : walletInstance.address\n        });\n        setIsLoggedIn(true);\n    }\n\n    const HandleLogout = () =>{\n        cav.klay.accounts.wallet.clear();\n        sessionStorage.removeItem('walletInstance');\n        setAuth({\n            keystore : '',\n            password : ''\n        });\n        setIsLoggedIn(false);\n    }\n    \n    return(\n        <>  \n            <Header/>\n            <Container>\n                \n                <Title><img src = {logo} /></Title>\n                {isLoggedIn ? \n                    (<Wrapper>\n                        <br/>\n                        <br/>\n                        <p>Address : {account.address.slice(0,8)}... {account.address.slice(16,22)}</p>\n                        <p>peb : {account.balance} </p>\n                        <div>\n                            <Button onClick={HandleLogout}>로그아웃</Button>\n                        </div>\n                    </Wrapper>) : \n                    (<Wrapper>\n                        <p></p>\n                        <Label for = \"input-keystore\">Keystore File</Label>\n                        <br/>\n                        <input type=\"file\" onChange={HandleImport}></input>\n                        <br/>\n                        <Label for = \"input-password\">Password</Label>\n                        <br/>\n                        <input type=\"password\" onChange={HandlePassword}></input>\n                        <br/>\n                        <div>\n                            <Button onClick={HandleLogin}>로그인</Button>\n                        </div>\n                    </Wrapper>)}\n            </Container>\n        </>\n    );\n};\n\nexport default Login;\n\n\n","/Users/sujin/Desktop/wato/src/components/Header/index.js",["85","86"],"/Users/sujin/Desktop/wato/src/components/Header/style.js",[],"/Users/sujin/Desktop/wato/src/pages/SelectRole/index.js",["87"],"import React from 'react';\nimport {Route, Link} from 'react-router-dom';\nimport './Partier.css';\nimport styled from 'styled-components';\nimport pa from './roleImg/partier.png';\nimport ho from './roleImg/host.png';\nimport pa2 from './roleImg/partier2.png';\nimport ho2 from './roleImg/host2.png';\nimport Header from '../../components/Header'\n\nconst SelectRole = ({match}) => {\n    const platform = match.params.platform;\n\n    const Container = styled.div`\n        margin-top: 50px;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        font-size: 15px;\n        color: #5e5e5e;\n    `;\n    const Title = styled.div`\n        font-size: 25px;\n        font-weight: bold;\n        margin-bottom : 50px;\n    `;\n    const [state, setState] = React.useState({\n        pa: false,\n        ho: false,\n        btnDisabled: true,\n    });\n    \n    const handleClickHost = (e) =>{\n        e.preventDefault();\n        setState({\n            ...state,\n            ho : true\n        });\n    };\n\n    const handleClickMem = (e) =>{\n        e.preventDefault();\n        setState({\n            ...state,\n            pa : true\n        });\n    }\n\n    return(\n        <>\n            <Header/>\n            <Container>\n            <div className=\"partiers\">\n                \n                <Title>파티장과 파티원 중 선택해주세요!</Title>\n                <div className=\"select\">\n                    <form className=\"host\">\n                        <button onClick={handleClickHost} className=\"h\">{state.ho ? <img src = {ho} alt=\"host\" width=\"120px\"/> : <img src = {ho2} alt=\"host2\" width=\"100px\"/>} </button>\n                        <label>파티장</label>\n                    </form>\n                    <form className=\"partier\">\n                        <button onClick={handleClickMem} className=\"p\">{state.pa ? <img src = {pa} alt=\"partier\" width=\"120px\"/> : <img src = {pa2} alt=\"partier2\" width=\"100px\"/>} </button>\n                        <label>파티원</label>\n                    </form>\n                </div>\n                {state.ho ? (\n                    <button className =\"btn1\" disabled={state.btnDisabled}><Link to ={`/makeparty/${platform}`}>파티 등록</Link></button>\n                ):(\n                    <button className =\"btn1\" disabled={state.btnDisabled}><Link to ={`/partylist/${platform}`}>파티 찾기</Link></button>\n                )}\n                \n                <button className =\"btn2\"><Link to ='/selectplatform'>PREV</Link></button>\n            </div>\n            </Container>\n        </>\n    );\n};\nexport default SelectRole;",["88","89"],"/Users/sujin/Desktop/wato/src/pages/PartyList/index.js",["90","91","92","93"],"import React, { useEffect,useState } from 'react';\nimport styled from 'styled-components';\nimport {Route, Link} from 'react-router-dom';\nimport netflix from '../SelectPlatform/partyImg/netflix.png';\nimport Header from '../../components/Header';\nimport Axios from 'axios';\nimport {List, Avatar,Button, message, Spin} from 'antd';\n\nconst Container = styled.div`\n    margin-top: 50px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    font-size: 15px;\n    color: #5e5e5e;\n`;\n\nconst Title = styled.div`\n    font-size: 25px;\n    font-weight: bold;\n    margin-bottom : 50px;\n`;\n\nconst PartyList = ({match}) => {\n    const platform = match.params.platform;\n    const pk = JSON.parse(sessionStorage.getItem('walletInstance')).privateKey;\n    const [loading, setLoading] = useState(false);\n    const [parties, setParties] = React.useState([\n            {\n                partyTitle : '',\n                platform : '',\n                platformId : '',\n                platformPasswd : '',\n                partyOwner : '',\n                partyContract : '',\n                partyStatus: 0,\n                modal : false\n            }\n        ]);\n    \n    useEffect(()=> {\n        GetParty();\n    },[]);\n\n    //플랫폼 별 필터로 수정\n    let loadParty = [];\n    const GetParty = () =>{\n        Axios.get('http://localhost:3003/api/partylist')\n            .then((response)=>{\n                 loadParty= { \n                    partyTitle : response.data[0][0],\n                    platform : response.data[0][1],\n                    platformId : response.data[0][2],\n                    platformPasswd : response.data[0][3],\n                    partyOwner : response.data[0][4],\n                    partyContract : response.data[0][5],\n                    partyStatus : response.data[0][6]\n                };\n            })\n            .then((response)=>{\n                setParties(parties.concat(loadParty));\n            })\n            .catch((error)=>{\n                console.log(error);\n            });\n    };\n    const info = () => {\n        message.success({\n            content: '결제 완료',\n            className: 'custom-class',\n            style: {\n              marginTop: '20vh',\n            },\n          });\n    };\n    const Payment = () =>{\n        const thash = '0x3ae7cd3d0e949065fe7075864b027ff8ae521eda';\n        //const ppk = '0x5c9286585b6d59ece65a19b14d11eef3cced3481bbd1d77df4174044dd8de72b';\n        const url = `http://localhost:3003/paymentParty/${thash}/${pk}`;\n        setLoading(true);\n        Axios.get(url)\n        .then((response)=>{\n            console.log(response.data.blockHash);\n        })\n        .then((response)=>{\n            setLoading(false);\n            info();\n            //로딩 false 하고 결제완료 하고 이동 버튼 띄우기 \n        })\n        .catch((error)=>{\n            console.log(error);\n        });\n    };\n\n    \n    \n    const filterParty = parties.filter(party => party.platform.includes('net'));\n    const list2 = filterParty.map( p =>(\n        <List.Item>\n            <List.Item.Meta\n              avatar={<Avatar src={netflix}/>}\n              title={p.platform}\n              description={p.partyOwner.slice(0,20)+'...'}\n            />\n            <Button onClick={Payment}>참여</Button>\n        </List.Item>\n    ));\n    \n    //props 넘어온 값으로 필터링해서 partyList 보여주기 \n    /*\n    let toDoList = 로딩 화면\n    if (!loading) toDoList = 로딩이 끝나면 보여줄 내용\n\n    */\n    return(\n        <>\n            <Header/>\n            <Container>\n                <Title>파티 선택</Title>\n                {loading ? <Spin /> : (<p></p>)}\n            </Container>\n                <List\n                    itemLayout=\"horizontal\"\n                    dataSource={filterParty}>\n                {list2}\n                </List>\n        </>\n    );\n};\n\nexport default PartyList;","/Users/sujin/Desktop/wato/src/pages/SelectPlatform/index.js",["94","95"],"import React,{useState} from 'react';\nimport styled from 'styled-components';\nimport {Route, Link} from 'react-router-dom';\nimport './party.css';\nimport net from './partyImg/netflix.png';\nimport wat from './partyImg/watcha.png';\nimport wav from './partyImg/wavve.png';\nimport tvi from './partyImg/tving.png';\nimport net2 from './partyImg/netflix2.png';\nimport wat2 from './partyImg/watcha2.png';\nimport wav2 from './partyImg/wavve2.png';\nimport tvi2 from './partyImg/tving2.png';\n\nimport Header from '../../components/Header'\n\nconst SelectPlatform = () => {\n    const Container = styled.div`\n        margin-top: 50px;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        font-size: 15px;\n        color: #5e5e5e;\n    `;\n    const Title = styled.div`\n        font-size: 25px;\n        font-weight: bold;\n        color : black;\n        margin-bottom : 50px;\n    `;\n\n    const [state,setState] = React.useState({\n        net : false,\n        wat : false,\n        wav : false,\n        tvi : false,\n        btnDisabled : true,\n        platform : ''\n    })\n\n    const handleClickNet = (e) => {\n        e.preventDefault(); \n        setState({\n            ...state,\n            net : true,\n            platform : 'netflix'\n        });\n    };\n    const handleClickWat = (e) => {\n        e.preventDefault(); \n        setState({\n            ...state,\n            wat : true,\n            platform : 'watcha'\n        });\n    };\n    const handleClickWav = (e) => {\n        e.preventDefault(); \n        setState({\n            ...state,\n            wav : true,\n            platform : 'wavve'\n        });\n    };\n    const handleClickTv = (e) => {\n        e.preventDefault(); \n        setState({\n            ...state,\n            tvi : true,\n            platform : 'tving'\n        });\n    };\n    return(\n        <>\n            <Header/>\n            <Container>\n                <div className=\"selectPlatform\">\n                    \n                    <Title>원하는 플랫폼을 선택해주세요!</Title>\n                    <div className=\"platforms\">\n                        <form className=\"netflix\">\n                            <button onClick={handleClickNet} className=\"net\"> {state.net ? <img src = {net} alt=\"netflix\" width=\"100px\"/> : <img src = {net2} alt=\"netflix2\" width=\"100px\"/>} </button>\n                            <label>Netflix</label>\n                        </form>\n                        <form className=\"watcha\">\n                            <button onClick={handleClickWat} className=\"wat\">{state.wat ? <img src = {wat} alt=\"watcha\" width=\"100px\"/> : <img src = {wat2} alt=\"watcha2\" width=\"100px\"/>}</button>\n                            <label>Watcha</label>\n                        </form>\n                        <form className=\"wavve\">\n                            <button onClick={handleClickWav} className=\"wav\">{state.wav ? <img src = {wav} alt=\"wavve\" width=\"100px\"/> : <img src = {wav2} alt=\"wavve2\" width=\"100px\"/>}</button>\n                            <label>Wavve</label>\n                        </form>\n                        <form className=\"tving\">\n                            <button onClick={handleClickTv} className=\"tvi\">{state.tvi ? <img src = {tvi} alt=\"tving\" width=\"100px\"/> : <img src = {tvi2} alt=\"tving2\" width=\"100px\"/>}</button>\n                            <label>Tving</label>\n                        </form>\n                    </div>\n                    <button className =\"btn\" disabled={state.btnDisabled}><Link to ={`/selectrole/${state.platform}`}>NEXT</Link></button>\n                    <br/>\n                </div>\n            </Container>\n        </>\n    );\n};\n\nexport default SelectPlatform;",["96","97"],"/Users/sujin/Desktop/wato/src/pages/MakeParty/index.js",["98","99","100","101","102","103","104","105","106","107","108","109"],"import React,{useState} from 'react';\nimport styled from 'styled-components';\nimport {Route, Link} from 'react-router-dom';\nimport netflix from '../SelectPlatform/partyImg/netflix.png';\nimport tving from '../SelectPlatform/partyImg/tving.png';\nimport watcha from '../SelectPlatform/partyImg/watcha.png';\nimport wavve from '../SelectPlatform/partyImg/wavve.png';\nimport Header from '../../components/Header'\nimport 'antd/dist/antd.css';\nimport {Input,Modal} from 'antd';\nimport Axios from 'axios';\n\nconst MakeParty = ({match}) => {\n    //cav.utils.fromPeb(balance,\"KLAY\")\n    const platform = match.params.platform;\n    const [visible,setVisible] = useState(false);\n    const [state,setState] = useState({\n        partyName : '',\n        platformId : '',\n        platformPasswd : '',\n        memberNum : '',\n        price : ''\n    });\n    const {partyName, platformId, platformPasswd, memberNum, price} = state;\n    const Container = styled.div`\n        margin-top: 50px;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        font-size: 15px;\n        color: #5e5e5e;\n    `;\n    const Title = styled.div`\n        font-size: 25px;\n        font-weight: bold;\n        margin-bottom : 50px;\n    `;\n    const Button2 = styled.button`\n        margin-top : 20px;\n        width: 30%;\n        height: 40px;\n        color: #fff;\n        font-size: 20px;\n        font-weight: bold;\n        border-radius: 6px;\n        border: solid 1px #5e5e5e;\n        background: #5e5e5e;\n    `;\n    const Img = styled.img`\n        width : 60px;\n        margin-bottom : 20px;\n    `;\n\n    const HandleChange = (e) => {\n        e.preventDefault();\n        const {value, name} = e.target.value;\n        \n        setState({\n            ...state,\n            [name] : value\n        });\n    }\n    const showModal = () =>{\n        setVisible(true);\n    }\n    const handleOk = e => {\n        console.log(e);\n        setVisible(false);\n        document.location.href='/';\n    };\n    \n    \n    \n    \n    const PartyDeploy = () => {\n        //param 추가 \n        showModal();\n        /*\n        .then() => showModal\n\n        Axios.post('http://localhost:3003/api/deployParty')\n            .then((res)=>{\n                console.log(res.data);\n            })\n            .catch((error)=>{\n                console.log(error);\n            });*/\n    }\n    return(\n        <>\n            <Header/>\n            <Container>\n                <Img src = {netflix}/>\n                <Title>{platform} 파티 생성</Title>\n                <label>파티명</label>\n                <br/>\n                <Input style={{width:'50%'}}  name = 'partyName' type=\"text\" onChange={e => {state.partyName = e.target.value}}/>\n                <br/>\n\n                <label>{platform} ID</label>\n                <br/>\n                <Input style={{width:'50%'}} name = 'platformId' type=\"text\" onChange={e => {state.platformId = e.target.value}}/>\n                <br/>\n\n                <label>{platform} PASSWORD</label>\n                <br/>\n                <Input style={{width:'50%'}} name = 'platformPasswd' type=\"password\" onChange={e => {state.platformPasswd = e.target.value}}/>\n                <br/>\n\n                <label>모집 인원</label>\n                <br/>\n                <Input style={{width:'50%'}} name = 'memberNum' type=\"text\" onChange={e => {state.memberNum = e.target.value}}/>\n                <br/>\n\n                <label>인원당 가격(PEB)</label>\n                <br/>\n                <Input style={{width:'50%'}} name = 'price' type=\"text\" onChange={e => {state.price = e.target.value}} />\n                <br/>\n                <Modal\n                    title=\"넷플릭스 파티 \"\n                    visible={visible}\n                    onOk={handleOk}\n                    >\n                    <p>등록 완료</p>\n                </Modal>\n\n                <Button2 onClick={PartyDeploy}>등록하기</Button2>\n            </Container>\n        </>\n    );\n};\n\nexport default MakeParty;",{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"110","replacedBy":"114"},{"ruleId":"112","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":3,"column":9,"nodeType":"118","messageId":"119","endLine":3,"endColumn":14},{"ruleId":"116","severity":1,"message":"120","line":3,"column":16,"nodeType":"118","messageId":"119","endLine":3,"endColumn":20},{"ruleId":"121","severity":1,"message":"122","line":56,"column":63,"nodeType":"123","messageId":"124","endLine":56,"endColumn":65},{"ruleId":"116","severity":1,"message":"125","line":88,"column":11,"nodeType":"118","messageId":"119","endLine":88,"endColumn":21},{"ruleId":"126","severity":1,"message":"127","line":89,"column":20,"nodeType":"128","messageId":"129","endLine":89,"endColumn":73},{"ruleId":"116","severity":1,"message":"117","line":3,"column":9,"nodeType":"118","messageId":"119","endLine":3,"endColumn":14},{"ruleId":"130","severity":1,"message":"131","line":49,"column":24,"nodeType":"132","endLine":49,"endColumn":44},{"ruleId":"110","replacedBy":"133"},{"ruleId":"112","replacedBy":"134"},{"ruleId":"116","severity":1,"message":"135","line":1,"column":15,"nodeType":"118","messageId":"119","endLine":1,"endColumn":23},{"ruleId":"136","severity":1,"message":"137","line":88,"column":11,"nodeType":"138","endLine":88,"endColumn":13,"suggestions":"139"},{"ruleId":"130","severity":1,"message":"131","line":164,"column":24,"nodeType":"132","endLine":164,"endColumn":44},{"ruleId":"116","severity":1,"message":"117","line":2,"column":9,"nodeType":"118","messageId":"119","endLine":2,"endColumn":14},{"ruleId":"130","severity":1,"message":"131","line":9,"column":19,"nodeType":"132","endLine":9,"endColumn":39},{"ruleId":"116","severity":1,"message":"117","line":2,"column":9,"nodeType":"118","messageId":"119","endLine":2,"endColumn":14},{"ruleId":"110","replacedBy":"140"},{"ruleId":"112","replacedBy":"141"},{"ruleId":"116","severity":1,"message":"117","line":3,"column":9,"nodeType":"118","messageId":"119","endLine":3,"endColumn":14},{"ruleId":"116","severity":1,"message":"120","line":3,"column":16,"nodeType":"118","messageId":"119","endLine":3,"endColumn":20},{"ruleId":"116","severity":1,"message":"142","line":25,"column":11,"nodeType":"118","messageId":"119","endLine":25,"endColumn":19},{"ruleId":"136","severity":1,"message":"143","line":43,"column":7,"nodeType":"138","endLine":43,"endColumn":9,"suggestions":"144"},{"ruleId":"116","severity":1,"message":"135","line":1,"column":15,"nodeType":"118","messageId":"119","endLine":1,"endColumn":23},{"ruleId":"116","severity":1,"message":"117","line":3,"column":9,"nodeType":"118","messageId":"119","endLine":3,"endColumn":14},{"ruleId":"110","replacedBy":"145"},{"ruleId":"112","replacedBy":"146"},{"ruleId":"116","severity":1,"message":"117","line":3,"column":9,"nodeType":"118","messageId":"119","endLine":3,"endColumn":14},{"ruleId":"116","severity":1,"message":"120","line":3,"column":16,"nodeType":"118","messageId":"119","endLine":3,"endColumn":20},{"ruleId":"116","severity":1,"message":"147","line":5,"column":8,"nodeType":"118","messageId":"119","endLine":5,"endColumn":13},{"ruleId":"116","severity":1,"message":"148","line":6,"column":8,"nodeType":"118","messageId":"119","endLine":6,"endColumn":14},{"ruleId":"116","severity":1,"message":"149","line":7,"column":8,"nodeType":"118","messageId":"119","endLine":7,"endColumn":13},{"ruleId":"116","severity":1,"message":"150","line":11,"column":8,"nodeType":"118","messageId":"119","endLine":11,"endColumn":13},{"ruleId":"116","severity":1,"message":"151","line":24,"column":12,"nodeType":"118","messageId":"119","endLine":24,"endColumn":21},{"ruleId":"116","severity":1,"message":"152","line":24,"column":23,"nodeType":"118","messageId":"119","endLine":24,"endColumn":33},{"ruleId":"116","severity":1,"message":"153","line":24,"column":35,"nodeType":"118","messageId":"119","endLine":24,"endColumn":49},{"ruleId":"116","severity":1,"message":"154","line":24,"column":51,"nodeType":"118","messageId":"119","endLine":24,"endColumn":60},{"ruleId":"116","severity":1,"message":"155","line":24,"column":62,"nodeType":"118","messageId":"119","endLine":24,"endColumn":67},{"ruleId":"116","severity":1,"message":"156","line":54,"column":11,"nodeType":"118","messageId":"119","endLine":54,"endColumn":23},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],["157"],["158"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'OpenDetail' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["157"],["158"],"'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'account' and 'cav.klay'. Either include them or remove the dependency array. You can also do a functional update 'setAccount(a => ...)' if you only need 'account' in the 'setAccount' call.","ArrayExpression",["159"],["157"],["158"],"'platform' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'GetParty'. Either include it or remove the dependency array.",["160"],["157"],["158"],"'tving' is defined but never used.","'watcha' is defined but never used.","'wavve' is defined but never used.","'Axios' is defined but never used.","'partyName' is assigned a value but never used.","'platformId' is assigned a value but never used.","'platformPasswd' is assigned a value but never used.","'memberNum' is assigned a value but never used.","'price' is assigned a value but never used.","'HandleChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},"Update the dependencies array to be: [account, cav.klay]",{"range":"165","text":"166"},"Update the dependencies array to be: [GetParty]",{"range":"167","text":"168"},[2295,2297],"[account, cav.klay]",[1215,1217],"[GetParty]"]